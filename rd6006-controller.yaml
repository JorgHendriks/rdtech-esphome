substitutions:
  device_name: "rd6006-controller"
  device_friendly_name: "RD 6006"
  device_description: "Power Supply"
  time_timezone: "Europe/Amsterdam"

esphome:
  name: $device_name
  friendly_name: $device_friendly_name
  comment: $device_description
  name_add_mac_suffix: false
  project:
    name: "wildekek.rd6006-controller"
    version: "1.2.1"

esp8266:
  board: esp01_1m

# Enable logging
logger:
  level: INFO
  # Disable logging via UART, since we're using this for modbus communication
  baud_rate: 0

# Enable status LED
status_led:
    pin:
      number: GPIO2
      inverted: true

# Enable Home Assistant API
api:
  encryption:
    key: !secret home_assistant_key

ota:
  password: !secret ota_password

# Configure WiFi
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: $device_friendly_name
    password: !secret wifi_fallback_password
captive_portal:

uart:
  id: mod_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 115200
  data_bits: 8
  stop_bits: 1
  parity: none

modbus:
 id: modbus1

modbus_controller:
  - id: powersupply
    ## This address should be set to the "Address" value in the config menu
    address: 0x01
    modbus_id: modbus1
    setup_priority: -10
    update_interval: 5s

time:
  # Get the time from HA, so we can use it for uptime
  - platform: homeassistant
    id: time_homeassistant
    timezone: "${time_timezone}"
    on_time_sync:
      - logger.log: Time has been set and is valid!
      - component.update: sensor_uptime_timestamp
      - number.set:
          id: date_year
          value: !lambda return id(time_homeassistant).now().year;
      - number.set:
          id: date_month
          value: !lambda return id(time_homeassistant).now().month;
      - number.set:
          id: date_day
          value: !lambda return id(time_homeassistant).now().day_of_month;
      - number.set:
          id: date_hour
          value: !lambda return id(time_homeassistant).now().hour;
      - number.set:
          id: date_minute
          value: !lambda return id(time_homeassistant).now().minute;
      - number.set:
          id: date_second
          value: !lambda return id(time_homeassistant).now().second;

sensor:
  - platform: modbus_controller
    name: "Model Number"
    entity_category: diagnostic
    modbus_controller_id: powersupply
    address: 0
    skip_updates: 10
    unit_of_measurement: ""
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 0
  
  - platform: modbus_controller
    modbus_controller_id: powersupply
    address: 3
    name: "Firmware version"
    entity_category: diagnostic
    unit_of_measurement: ""
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: powersupply
    address: 10
    name: "Output voltage"
    device_class: voltage
    unit_of_measurement: "V"
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: powersupply
    address: 33
    name: "Battery voltage"
    device_class: voltage
    unit_of_measurement: "V"
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: powersupply
    address: 40
    name: "Battery energy"
    device_class: "energy_storage"
    unit_of_measurement: "Wh"
    icon: "mdi:battery-60"
    register_type: holding
    value_type: U_DWORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: powersupply
    address: 11
    name: "Output current"
    device_class: current
    unit_of_measurement: "A"
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: powersupply
    address: 14
    name: "Input voltage"
    device_class: voltage
    unit_of_measurement: "V"
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
  
  - platform: modbus_controller
    name: "Temperature"
    modbus_controller_id: powersupply
    register_type: holding
    address: 4
    value_type: S_DWORD
    device_class: temperature
    unit_of_measurement: "°C"
    
  - platform: modbus_controller
    name: "Temperature external"
    modbus_controller_id: powersupply
    register_type: holding
    address: 34
    value_type: S_DWORD
    device_class: temperature
    unit_of_measurement: "°C"
    
  - platform: wifi_signal
    name: "Wi-Fi Signal"
    update_interval: 60s

  # Uptime is used internally only
  - platform: uptime
    id: sensor_uptime
  # This sensor is an alternative for the uptime sensor, which only sends the
  # startup timestamp of the device to home assistant once
  - platform: template
    id: sensor_uptime_timestamp
    name: "Uptime"
    entity_category: diagnostic
    device_class: "timestamp"
    accuracy_decimals: 0
    update_interval: never
    lambda: |-
      static float timestamp = (
        id(time_homeassistant).utcnow().timestamp - id(sensor_uptime).state
      );
      return timestamp;

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
    ssid:
      name: "Wi-Fi SSID"
    bssid:
      name: "Wi-Fi BSSID"
  - platform: version
    name: "Version"
    hide_timestamp: true

binary_sensor:
  - platform: modbus_controller
    modbus_controller_id: powersupply
    address: 15
    name: "Keypad lock"
    entity_category: diagnostic
    device_class: lock
    register_type: holding
    bitmask: 0x1
  - platform: modbus_controller
    modbus_controller_id: powersupply
    address: 32
    name: "Battery mode"
    device_class: battery_charging
    register_type: holding
    bitmask: 0x1

  
number:
  - platform: modbus_controller
    name: "Backlight"
    modbus_controller_id: powersupply
    entity_category: config
    address: 72
    icon: "mdi:lightbulb"
    value_type: U_WORD
    min_value: 0
    max_value: 5

  - platform: modbus_controller
    modbus_controller_id: powersupply
    name: "Output voltage"
    address: 8
    entity_category: config
    icon: "mdi:sine-wave"
    value_type: U_WORD
    min_value: 0
    max_value: 60
    step: 0.01
    multiply: 100
  
  - platform: modbus_controller
    modbus_controller_id: powersupply
    name: "Output current"
    address: 9
    entity_category: config
    icon: "mdi:current-dc"
    value_type: U_WORD
    min_value: 0
    max_value: 6
    step: 0.01
    multiply: 1000

  - platform: modbus_controller
    modbus_controller_id: powersupply
    name: "Over Voltage Protection"
    device_class: voltage
    unit_of_measurement: "V"
    address: 82
    entity_category: config
    value_type: U_WORD
    min_value: 0
    max_value: 62
    step: 0.01
    multiply: 100

  # Date components are kept internal
  - platform: modbus_controller
    id: date_year
    modbus_controller_id: powersupply
    entity_category: diagnostic
    register_type: holding
    address: 48
    value_type: U_WORD
  - platform: modbus_controller
    id: date_month
    modbus_controller_id: powersupply
    entity_category: diagnostic
    register_type: holding
    address: 49
    value_type: U_WORD
  - platform: modbus_controller
    id: date_day
    modbus_controller_id: powersupply
    entity_category: diagnostic
    register_type: holding
    address: 50
    value_type: U_WORD
  - platform: modbus_controller
    id: date_hour
    modbus_controller_id: powersupply
    entity_category: diagnostic
    register_type: holding
    address: 51
    value_type: U_WORD
  - platform: modbus_controller
    id: date_minute
    modbus_controller_id: powersupply
    entity_category: diagnostic
    register_type: holding
    address: 52
    value_type: U_WORD
  - platform: modbus_controller
    id: date_second
    modbus_controller_id: powersupply
    entity_category: diagnostic
    register_type: holding
    address: 53
    value_type: U_WORD

switch:
  - platform: modbus_controller
    modbus_controller_id: powersupply
    name: "Output"
    address: 18
    register_type: holding
    bitmask: 0x1
    entity_category: config